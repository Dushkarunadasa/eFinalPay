// <auto-generated />
using System;
using FinaPay.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FinaPay.Migrations
{
    [DbContext(typeof(PaySubjectsContext))]
    [Migration("20221013040910_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("FinaPay.Models.ConsolidatedSalForAllowance", b =>
                {
                    b.Property<string>("CatCode")
                        .IsRequired()
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4)");

                    b.Property<int>("ItemCode")
                        .HasColumnType("int");

                    b.Property<string>("OfficerCode")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.Property<decimal?>("Rate")
                        .HasColumnType("numeric(23,6)");

                    b.Property<string>("SysCode")
                        .IsRequired()
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4)");

                    b.ToView("Consolidated_Sal_For_Allowances");
                });

            modelBuilder.Entity("FinaPay.Models.FailedJob", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Connection")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("connection");

                    b.Property<string>("Exception")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("exception");

                    b.Property<DateTime>("FailedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("failed_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Payload")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("payload");

                    b.Property<string>("Queue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("queue");

                    b.Property<string>("Uuid")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("uuid");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Uuid" }, "failed_jobs_uuid_unique")
                        .IsUnique();

                    b.ToTable("failed_jobs", (string)null);
                });

            modelBuilder.Entity("FinaPay.Models.Migration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Batch")
                        .HasColumnType("int")
                        .HasColumnName("batch");

                    b.Property<string>("Migration1")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("migration");

                    b.HasKey("Id");

                    b.ToTable("migrations", (string)null);
                });

            modelBuilder.Entity("FinaPay.Models.PasswordReset", b =>
                {
                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("created_at");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("email");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("token");

                    b.HasIndex(new[] { "Email" }, "password_resets_email_index");

                    b.ToTable("password_resets", (string)null);
                });

            modelBuilder.Entity("FinaPay.Models.PayBasicRankScaleD", b =>
                {
                    b.Property<string>("RankCode")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.Property<int>("ScaleCode")
                        .HasColumnType("int");

                    b.Property<int>("Sequence")
                        .HasColumnType("int");

                    b.Property<decimal>("Adjustment")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ConsolidatedSal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("RankCat")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.HasKey("RankCode", "ScaleCode", "Sequence")
                        .HasName("PK_Basic_Rank_Scale_D");

                    b.ToTable("Pay_Basic_Rank_Scale_D", (string)null);
                });

            modelBuilder.Entity("FinaPay.Models.PayBasicScaleD", b =>
                {
                    b.Property<int>("ScaleCode")
                        .HasColumnType("int")
                        .HasColumnName("Scale_Code");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("ApprovedBy")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<DateTime?>("ApprovedOn")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("InsertOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("InsertedBy")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .IsFixedLength();

                    b.Property<int>("Month")
                        .HasColumnType("int");

                    b.Property<int?>("Sequence")
                        .HasColumnType("int");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("ScaleCode")
                        .HasName("PK_Basic_Scale_D");

                    b.ToTable("Pay_Basic_Scale_D", (string)null);
                });

            modelBuilder.Entity("FinaPay.Models.PayProcessMonth", b =>
                {
                    b.Property<string>("CurMonth")
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("varchar(6)");

                    b.Property<string>("PrevMonth")
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("varchar(6)");

                    b.ToTable("Pay_ProcessMonth", (string)null);
                });

            modelBuilder.Entity("FinaPay.Models.PayRankD", b =>
                {
                    b.Property<string>("CatCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("NoAnnualIncrement")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("NoProIncNewRank")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("NoPromIncPrevRank")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("NotEffectConsolidated")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("Order")
                        .HasColumnType("int");

                    b.Property<int?>("Position")
                        .HasColumnType("int");

                    b.Property<string>("RankCode")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("RankGroup")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.Property<string>("RankName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("RankNameSin")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ScaleRankCode")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<bool?>("ScaleTop")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.ToTable("Pay_Rank_D", (string)null);
                });

            modelBuilder.Entity("FinaPay.Models.PersonalAccessToken", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Abilities")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("abilities");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("created_at");

                    b.Property<DateTime?>("LastUsedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("last_used_at");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("name");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)")
                        .HasColumnName("token");

                    b.Property<long>("TokenableId")
                        .HasColumnType("bigint")
                        .HasColumnName("tokenable_id");

                    b.Property<string>("TokenableType")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("tokenable_type");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Token" }, "personal_access_tokens_token_unique")
                        .IsUnique();

                    b.HasIndex(new[] { "TokenableType", "TokenableId" }, "personal_access_tokens_tokenable_type_tokenable_id_index");

                    b.ToTable("personal_access_tokens", (string)null);
                });

            modelBuilder.Entity("FinaPay.Models.Sub327Action", b =>
                {
                    b.Property<string>("TransId")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.Property<DateTime>("ActionOn")
                        .HasColumnType("datetime");

                    b.Property<string>("CatCode")
                        .HasMaxLength(1)
                        .HasColumnType("nchar(1)")
                        .IsFixedLength();

                    b.Property<string>("OfficialNo")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.Property<string>("Remarks")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("SysCode")
                        .HasMaxLength(3)
                        .HasColumnType("nchar(3)")
                        .IsFixedLength();

                    b.HasKey("TransId", "ActionOn");

                    b.ToTable("Sub_327_Action", (string)null);
                });

            modelBuilder.Entity("FinaPay.Models.Sub327adjustmentTran", b =>
                {
                    b.Property<string>("TransId")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.Property<bool?>("Acheck")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("ACheck")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("Aconfirm")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("AConfirm")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("Aforward")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("AForward")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("AuditOfficer")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("AuditStaff")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("BaseCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.Property<string>("CurrentPayMonth")
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("char(6)")
                        .IsFixedLength();

                    b.Property<bool?>("Dcheck")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("DCheck")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("Dconfirm")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("DConfirm")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("Ddnpay")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("DDNPay")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("DeductAmount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18,2)")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("Des")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<bool?>("Dforward")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("DForward")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("FilePath")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<bool?>("PayAction")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("PayActionRemarks")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool?>("Reject")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("Remarks")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("Sso")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("SSO")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("Subject")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("Tconfirm")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("TConfirm")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("Tforward")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("TForward")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("Total327")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18,2)")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("Tsave")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("TSave")
                        .HasDefaultValueSql("((0))");

                    b.Property<int>("UnitId")
                        .HasColumnType("int");

                    b.HasKey("TransId");

                    b.ToTable("Sub_327Adjustment_Trans", (string)null);
                });

            modelBuilder.Entity("FinaPay.Models.Sub327item", b =>
                {
                    b.Property<string>("ArrearsCode")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.Property<string>("ArrearsCodeCat")
                        .HasMaxLength(1)
                        .HasColumnType("nchar(1)")
                        .IsFixedLength();

                    b.Property<string>("CatCode")
                        .HasMaxLength(1)
                        .HasColumnType("nchar(1)")
                        .IsFixedLength();

                    b.Property<string>("ItemCategory")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .IsFixedLength();

                    b.Property<string>("ItemCode")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4)");

                    b.Property<string>("Type")
                        .HasMaxLength(1)
                        .HasColumnType("nchar(1)")
                        .IsFixedLength();

                    b.ToTable("Sub_327Items", (string)null);
                });

            modelBuilder.Entity("FinaPay.Models.Sub327List", b =>
                {
                    b.Property<string>("TransId")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("CatCode")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nchar(1)")
                        .IsFixedLength();

                    b.Property<string>("ItemCat")
                        .HasMaxLength(1)
                        .HasColumnType("nchar(1)")
                        .IsFixedLength();

                    b.Property<string>("ItemCode")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.Property<string>("OfficialNo")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.Property<int>("PayMonth")
                        .HasColumnType("int");

                    b.Property<string>("SysCode")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nchar(3)")
                        .IsFixedLength();

                    b.Property<int?>("_596")
                        .HasColumnType("int")
                        .HasColumnName("596");

                    b.Property<int?>("_598")
                        .HasColumnType("int")
                        .HasColumnName("598");

                    b.Property<int?>("_600")
                        .HasColumnType("int")
                        .HasColumnName("600");

                    b.Property<int?>("_605606")
                        .HasColumnType("int")
                        .HasColumnName("605/606");

                    b.Property<int?>("_605a606a")
                        .HasColumnType("int")
                        .HasColumnName("605A/606A");

                    b.Property<int?>("_610611")
                        .HasColumnType("int")
                        .HasColumnName("610/611");

                    b.Property<int?>("_612613")
                        .HasColumnType("int")
                        .HasColumnName("612/613");

                    b.Property<int?>("_615614")
                        .HasColumnType("int")
                        .HasColumnName("615/614");

                    b.Property<int?>("_619")
                        .HasColumnType("int")
                        .HasColumnName("619");

                    b.Property<int?>("_630")
                        .HasColumnType("int")
                        .HasColumnName("630");

                    b.Property<int?>("_686687")
                        .HasColumnType("int")
                        .HasColumnName("686/687");

                    b.Property<int?>("_688689")
                        .HasColumnType("int")
                        .HasColumnName("688/689");

                    b.Property<int?>("_690")
                        .HasColumnType("int")
                        .HasColumnName("690");

                    b.HasKey("TransId", "OrderId")
                        .HasName("PK_Sub_327_List_1");

                    b.ToTable("Sub_327_List", (string)null);
                });

            modelBuilder.Entity("FinaPay.Models.SubAllowanceArea", b =>
                {
                    b.Property<string>("Area")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("BaseCode")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.ToTable("Sub_Allowance_Areas", (string)null);
                });

            modelBuilder.Entity("FinaPay.Models.SubAllowanceIncentive", b =>
                {
                    b.Property<string>("ItemCode")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.Property<int?>("Method")
                        .HasColumnType("int");

                    b.ToTable("Sub_Allowance_Incentives", (string)null);
                });

            modelBuilder.Entity("FinaPay.Models.SubAllowancesArrearsCode", b =>
                {
                    b.Property<string>("ArrearsCode")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.Property<string>("ItemCode")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.ToTable("Sub_Allowances_ArrearsCodes", (string)null);
                });

            modelBuilder.Entity("FinaPay.Models.SubAllowancesBranch", b =>
                {
                    b.Property<string>("Branch")
                        .HasMaxLength(3)
                        .HasColumnType("nchar(3)")
                        .IsFixedLength();

                    b.Property<string>("ItemCode")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.ToTable("Sub_Allowances_Branch", (string)null);
                });

            modelBuilder.Entity("FinaPay.Models.SubAllowancesCalGroup", b =>
                {
                    b.Property<string>("ItemCode")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.Property<string>("ItemGroup")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.ToTable("Sub_Allowances_CAlGroup", (string)null);
                });

            modelBuilder.Entity("FinaPay.Models.SubAllowancesCondition", b =>
                {
                    b.Property<string>("Calculation")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.Property<string>("ItemCode")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.ToTable("Sub_Allowances_Conditions", (string)null);
                });

            modelBuilder.Entity("FinaPay.Models.SubAllowancesGroup", b =>
                {
                    b.Property<string>("ItemCode")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.Property<string>("ItemGroup")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.Property<int?>("ItemOrder")
                        .HasColumnType("int");

                    b.ToTable("Sub_Allowances_Group", (string)null);
                });

            modelBuilder.Entity("FinaPay.Models.SubAllowancesLog", b =>
                {
                    b.Property<string>("LuserId")
                        .HasMaxLength(50)
                        .HasColumnType("nchar(50)")
                        .HasColumnName("LUserId")
                        .IsFixedLength();

                    b.Property<string>("Ldescription")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("LDescription");

                    b.Property<DateTime>("LogOn")
                        .HasColumnType("datetime")
                        .HasColumnName("Log_on");

                    b.Property<string>("Ipaddress")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("IPaddress");

                    b.HasKey("LuserId", "Ldescription", "LogOn")
                        .HasName("PK_Sub_Allowances_Logs");

                    b.ToTable("Sub_Allowances_Log", (string)null);
                });

            modelBuilder.Entity("FinaPay.Models.SubAllowancesOverPayCode", b =>
                {
                    b.Property<string>("ItemCode")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.Property<string>("OverPayCode")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.ToTable("Sub_Allowances_OverPayCodes", (string)null);
                });

            modelBuilder.Entity("FinaPay.Models.SubAllowancesRank", b =>
                {
                    b.Property<decimal?>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("CatCode")
                        .HasMaxLength(1)
                        .HasColumnType("nchar(1)")
                        .IsFixedLength();

                    b.Property<string>("ItemCode")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.Property<string>("RankCode")
                        .HasMaxLength(3)
                        .HasColumnType("nchar(3)")
                        .IsFixedLength();

                    b.ToTable("Sub_Allowances_Ranks", (string)null);
                });

            modelBuilder.Entity("FinaPay.Models.SubAllowancesRestricted", b =>
                {
                    b.Property<string>("ItemCode")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.Property<string>("Restricted")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.ToTable("Sub_Allowances_Restricted", (string)null);
                });

            modelBuilder.Entity("FinaPay.Models.SubAllowancesSubItem", b =>
                {
                    b.Property<int>("SubjectId")
                        .HasColumnType("int")
                        .HasColumnName("SubjectID");

                    b.Property<string>("ItemCode")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.Property<int?>("Type")
                        .HasColumnType("int");

                    b.HasKey("SubjectId", "ItemCode");

                    b.ToTable("Sub_Allowances_SubItems", (string)null);
                });

            modelBuilder.Entity("FinaPay.Models.SubAllowancesSubject", b =>
                {
                    b.Property<int>("SubId")
                        .HasColumnType("int")
                        .HasColumnName("Sub_Id");

                    b.Property<string>("Subject")
                        .HasMaxLength(35)
                        .HasColumnType("nchar(35)")
                        .IsFixedLength();

                    b.HasKey("SubId")
                        .HasName("PK_Sub_All_Subjects");

                    b.ToTable("Sub_Allowances_Subjects", (string)null);
                });

            modelBuilder.Entity("FinaPay.Models.SubAllowancesSysCat", b =>
                {
                    b.Property<string>("CatCode")
                        .HasMaxLength(1)
                        .HasColumnType("nchar(1)")
                        .IsFixedLength();

                    b.Property<string>("ItemCode")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.Property<string>("SysCode")
                        .HasMaxLength(3)
                        .HasColumnType("nchar(3)")
                        .IsFixedLength();

                    b.ToTable("Sub_Allowances_SYS_CAT", (string)null);
                });

            modelBuilder.Entity("FinaPay.Models.SubAllowancesTransDetail", b =>
                {
                    b.Property<string>("TransId")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.Property<string>("ItemCode")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.Property<string>("OfficialNo")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<decimal>("Amount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18,2)")
                        .HasDefaultValueSql("((1))");

                    b.Property<decimal?>("ArrearsAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ArrearsCode")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.Property<string>("BaseCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.Property<string>("CatCode")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nchar(1)")
                        .IsFixedLength();

                    b.Property<bool>("Edit")
                        .HasColumnType("bit");

                    b.Property<string>("EditedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nchar(50)")
                        .IsFixedLength();

                    b.Property<DateTime>("EffectDate")
                        .HasColumnType("date");

                    b.Property<string>("ItemCategory")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nchar(1)")
                        .IsFixedLength();

                    b.Property<decimal?>("OverPayAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("OverPayCode")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.Property<bool>("Reject")
                        .HasColumnType("bit");

                    b.Property<string>("Remarks")
                        .HasMaxLength(150)
                        .HasColumnType("nchar(150)")
                        .IsFixedLength();

                    b.Property<string>("SysCode")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nchar(3)")
                        .IsFixedLength();

                    b.HasKey("TransId", "ItemCode", "OfficialNo");

                    b.ToTable("Sub_Allowances_Trans_Details", (string)null);
                });

            modelBuilder.Entity("FinaPay.Models.SubAllowancesTransDetailsHistory", b =>
                {
                    b.Property<string>("TransId")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.Property<string>("ItemCode")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.Property<string>("OfficialNo")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<decimal?>("ArrearsAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ArrearsCode")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.Property<string>("BaseCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.Property<string>("CatCode")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nchar(1)")
                        .IsFixedLength();

                    b.Property<bool>("Edit")
                        .HasColumnType("bit");

                    b.Property<string>("EditedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nchar(50)")
                        .IsFixedLength();

                    b.Property<DateTime>("EffectDate")
                        .HasColumnType("date");

                    b.Property<string>("ItemCategory")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nchar(1)")
                        .IsFixedLength();

                    b.Property<decimal?>("OverPayAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("OverPayCode")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.Property<bool>("Reject")
                        .HasColumnType("bit");

                    b.Property<string>("Remarks")
                        .HasMaxLength(150)
                        .HasColumnType("nchar(150)")
                        .IsFixedLength();

                    b.Property<string>("SysCode")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nchar(3)")
                        .IsFixedLength();

                    b.HasKey("TransId", "ItemCode", "OfficialNo");

                    b.ToTable("Sub_Allowances_Trans_Details_History", (string)null);
                });

            modelBuilder.Entity("FinaPay.Models.SubAllowancesTransDetailsHistory1", b =>
                {
                    b.Property<string>("TransId")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.Property<string>("ItemCode")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.Property<string>("OfficialNo")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<string>("BaseCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.Property<string>("CatCode")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nchar(1)")
                        .IsFixedLength();

                    b.Property<bool>("Edit")
                        .HasColumnType("bit");

                    b.Property<string>("EditedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nchar(50)")
                        .IsFixedLength();

                    b.Property<string>("ItemCategory")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nchar(1)")
                        .IsFixedLength();

                    b.Property<bool>("Reject")
                        .HasColumnType("bit");

                    b.Property<string>("Remarks")
                        .HasMaxLength(150)
                        .HasColumnType("nchar(150)")
                        .IsFixedLength();

                    b.Property<string>("SysCode")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nchar(3)")
                        .IsFixedLength();

                    b.HasKey("TransId", "ItemCode", "OfficialNo");

                    b.ToTable("Sub_Allowances_Trans_Details_History_1", (string)null);
                });

            modelBuilder.Entity("FinaPay.Models.SubAllowancesTransId", b =>
                {
                    b.Property<int>("SubjectId")
                        .HasColumnType("int")
                        .HasColumnName("SubjectID");

                    b.Property<long?>("TransId")
                        .HasColumnType("bigint");

                    b.ToTable("Sub_Allowances_TransId", (string)null);
                });

            modelBuilder.Entity("FinaPay.Models.SubAllowancesTransMaster", b =>
                {
                    b.Property<string>("TransId")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.Property<double>("PayMonth")
                        .HasColumnType("float");

                    b.Property<int>("UnitCode")
                        .HasColumnType("int");

                    b.Property<string>("BaseCode")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.Property<string>("Path")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("Taudit")
                        .HasColumnType("bit")
                        .HasColumnName("TAudit");

                    b.Property<string>("TauditCatCode")
                        .HasMaxLength(1)
                        .HasColumnType("nchar(1)")
                        .HasColumnName("TAuditCatCode")
                        .IsFixedLength();

                    b.Property<string>("TauditOfficialNo")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .HasColumnName("TAuditOfficialNo")
                        .IsFixedLength();

                    b.Property<bool>("TauditStaff")
                        .HasColumnType("bit")
                        .HasColumnName("TAuditStaff");

                    b.Property<string>("TauditSysCode")
                        .HasMaxLength(3)
                        .HasColumnType("nchar(3)")
                        .HasColumnName("TAuditSysCode")
                        .IsFixedLength();

                    b.Property<DateTime?>("TauditedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("TAuditedOn");

                    b.Property<bool>("Tconfirm")
                        .HasColumnType("bit")
                        .HasColumnName("TConfirm");

                    b.Property<string>("TconfirmBy")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .HasColumnName("TConfirmBy")
                        .IsFixedLength();

                    b.Property<string>("TconfirmCatCode")
                        .HasMaxLength(1)
                        .HasColumnType("nchar(1)")
                        .HasColumnName("TConfirmCatCode")
                        .IsFixedLength();

                    b.Property<DateTime?>("TconfirmOn")
                        .HasColumnType("datetime")
                        .HasColumnName("TConfirmOn");

                    b.Property<string>("TconfirmSysCode")
                        .HasMaxLength(3)
                        .HasColumnType("nchar(3)")
                        .HasColumnName("TConfirmSysCode")
                        .IsFixedLength();

                    b.Property<bool>("Tforward")
                        .HasColumnType("bit")
                        .HasColumnName("TForward");

                    b.Property<string>("TforwardBy")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .HasColumnName("TForwardBy")
                        .IsFixedLength();

                    b.Property<string>("TforwardCatCode")
                        .HasMaxLength(1)
                        .HasColumnType("nchar(1)")
                        .HasColumnName("TForwardCatCode")
                        .IsFixedLength();

                    b.Property<DateTime?>("TforwardOn")
                        .HasColumnType("datetime")
                        .HasColumnName("TForwardOn");

                    b.Property<string>("TforwardSysCode")
                        .HasMaxLength(3)
                        .HasColumnType("nchar(3)")
                        .HasColumnName("TForwardSysCode")
                        .IsFixedLength();

                    b.Property<string>("TheadBy")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .HasColumnName("THeadBy")
                        .IsFixedLength();

                    b.Property<bool>("TpayHead")
                        .HasColumnType("bit")
                        .HasColumnName("TPayHead");

                    b.Property<string>("TpayHeadCatCode")
                        .HasMaxLength(1)
                        .HasColumnType("nchar(1)")
                        .HasColumnName("TPayHeadCatCode")
                        .IsFixedLength();

                    b.Property<DateTime?>("TpayHeadOn")
                        .HasColumnType("datetime")
                        .HasColumnName("TPayHeadOn");

                    b.Property<string>("TpayHeadSysCode")
                        .HasMaxLength(3)
                        .HasColumnType("nchar(3)")
                        .HasColumnName("TPayHeadSysCode")
                        .IsFixedLength();

                    b.Property<bool>("Treject")
                        .HasColumnType("bit")
                        .HasColumnName("TReject");

                    b.Property<string>("TrejectCatCode")
                        .HasMaxLength(1)
                        .HasColumnType("nchar(1)")
                        .HasColumnName("TRejectCatCode")
                        .IsFixedLength();

                    b.Property<DateTime?>("TrejectOn")
                        .HasColumnType("datetime")
                        .HasColumnName("TRejectOn");

                    b.Property<string>("TrejectReason")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("TRejectReason");

                    b.Property<string>("TrejectSysCode")
                        .HasMaxLength(3)
                        .HasColumnType("nchar(3)")
                        .HasColumnName("TRejectSysCode")
                        .IsFixedLength();

                    b.Property<string>("Trejectby")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .HasColumnName("TRejectby")
                        .IsFixedLength();

                    b.Property<string>("TsauditCatCode")
                        .HasMaxLength(1)
                        .HasColumnType("nchar(1)")
                        .HasColumnName("TSAuditCatCode")
                        .IsFixedLength();

                    b.Property<string>("TsauditOfficialNo")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .HasColumnName("TSAuditOfficialNo")
                        .IsFixedLength();

                    b.Property<string>("TsauditSysCode")
                        .HasMaxLength(3)
                        .HasColumnType("nchar(3)")
                        .HasColumnName("TSAuditSysCode")
                        .IsFixedLength();

                    b.Property<DateTime?>("TsauditedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("TSAuditedOn");

                    b.Property<bool>("Tsave")
                        .HasColumnType("bit")
                        .HasColumnName("TSave");

                    b.Property<string>("TsaveBy")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .HasColumnName("TSaveBy")
                        .IsFixedLength();

                    b.Property<string>("TsaveCatCode")
                        .HasMaxLength(1)
                        .HasColumnType("nchar(1)")
                        .HasColumnName("TSaveCatCode")
                        .IsFixedLength();

                    b.Property<DateTime?>("TsaveOn")
                        .HasColumnType("datetime")
                        .HasColumnName("TSaveOn");

                    b.Property<string>("TsaveSysCode")
                        .HasMaxLength(3)
                        .HasColumnType("nchar(3)")
                        .HasColumnName("TSaveSysCode")
                        .IsFixedLength();

                    b.Property<bool>("Tsso")
                        .HasColumnType("bit")
                        .HasColumnName("TSSO");

                    b.Property<string>("Tssoby")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .HasColumnName("TSSOBy")
                        .IsFixedLength();

                    b.Property<string>("TssocatCode")
                        .HasMaxLength(1)
                        .HasColumnType("nchar(1)")
                        .HasColumnName("TSSOCatCode")
                        .IsFixedLength();

                    b.Property<DateTime?>("Tssoon")
                        .HasColumnType("datetime")
                        .HasColumnName("TSSOOn");

                    b.Property<string>("TssosysCode")
                        .HasMaxLength(3)
                        .HasColumnType("nchar(3)")
                        .HasColumnName("TSSOSysCode")
                        .IsFixedLength();

                    b.Property<string>("TsubClarkBy")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .HasColumnName("TSubClarkBy")
                        .IsFixedLength();

                    b.Property<string>("TsubClarkCatCode")
                        .HasMaxLength(1)
                        .HasColumnType("nchar(1)")
                        .HasColumnName("TSubClarkCatCode")
                        .IsFixedLength();

                    b.Property<DateTime?>("TsubClarkOn")
                        .HasColumnType("datetime")
                        .HasColumnName("TSubClarkOn");

                    b.Property<string>("TsubClarkSysCode")
                        .HasMaxLength(3)
                        .HasColumnType("nchar(3)")
                        .HasColumnName("TSubClarkSysCode")
                        .IsFixedLength();

                    b.Property<bool>("Tsubject")
                        .HasColumnType("bit")
                        .HasColumnName("TSubject");

                    b.HasKey("TransId", "PayMonth", "UnitCode", "BaseCode")
                        .HasName("PK_Allowances_Trans_Master");

                    b.ToTable("Sub_Allowances_Trans_Master", (string)null);
                });

            modelBuilder.Entity("FinaPay.Models.SubAttachment", b =>
                {
                    b.Property<string>("Tattachment")
                        .HasMaxLength(25)
                        .HasColumnType("nchar(25)")
                        .HasColumnName("TAttachment")
                        .IsFixedLength();

                    b.Property<int?>("Torder")
                        .HasColumnType("int")
                        .HasColumnName("TOrder");

                    b.Property<string>("Tpath")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("TPath");

                    b.Property<string>("TransId")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .HasColumnName("Trans_Id")
                        .IsFixedLength();

                    b.ToTable("Sub_Attachments", (string)null);
                });

            modelBuilder.Entity("FinaPay.Models.SubBaseChange", b =>
                {
                    b.Property<string>("CatCode")
                        .HasMaxLength(1)
                        .HasColumnType("nchar(1)")
                        .IsFixedLength();

                    b.Property<string>("HrmsbaseCode")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .HasColumnName("HRMSBaseCode")
                        .IsFixedLength();

                    b.Property<string>("OfficialNo")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.Property<string>("PayBaseCode")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.Property<string>("SysCode")
                        .HasMaxLength(3)
                        .HasColumnType("nchar(3)")
                        .IsFixedLength();

                    b.ToTable("Sub_Base_Change", (string)null);
                });

            modelBuilder.Entity("FinaPay.Models.SubBaseMatching", b =>
                {
                    b.Property<string>("BaseCode")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.Property<string>("PayBaseCode")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.ToTable("Sub_BaseMatching", (string)null);
                });

            modelBuilder.Entity("FinaPay.Models.SubExtraDutyDetail", b =>
                {
                    b.Property<string>("TransId")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .HasColumnName("TransID")
                        .IsFixedLength();

                    b.Property<DateTime>("EffectDt")
                        .HasColumnType("date");

                    b.Property<string>("Sfrom")
                        .HasMaxLength(4)
                        .HasColumnType("nchar(4)")
                        .HasColumnName("SFrom")
                        .IsFixedLength();

                    b.Property<decimal?>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Details")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int?>("Hrs")
                        .HasColumnType("int");

                    b.Property<int?>("Minutes")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Sto")
                        .HasMaxLength(4)
                        .HasColumnType("nchar(4)")
                        .HasColumnName("STo")
                        .IsFixedLength();

                    b.HasKey("TransId", "EffectDt", "Sfrom");

                    b.ToTable("Sub_ExtraDutyDetails", (string)null);
                });

            modelBuilder.Entity("FinaPay.Models.SubExtraDutyDetailsHistory", b =>
                {
                    b.Property<string>("TransId")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .HasColumnName("TransID")
                        .IsFixedLength();

                    b.Property<DateTime>("EffectDt")
                        .HasColumnType("date");

                    b.Property<string>("Sfrom")
                        .HasMaxLength(4)
                        .HasColumnType("nchar(4)")
                        .HasColumnName("SFrom")
                        .IsFixedLength();

                    b.Property<decimal?>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Details")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int?>("Hrs")
                        .HasColumnType("int");

                    b.Property<decimal?>("Minutes")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Sto")
                        .HasMaxLength(4)
                        .HasColumnType("nchar(4)")
                        .HasColumnName("STo")
                        .IsFixedLength();

                    b.HasKey("TransId", "EffectDt", "Sfrom");

                    b.ToTable("Sub_ExtraDutyDetails_History", (string)null);
                });

            modelBuilder.Entity("FinaPay.Models.SubExtraDutyMaster", b =>
                {
                    b.Property<string>("TransId")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.Property<double>("PayMonth")
                        .HasColumnType("float");

                    b.Property<string>("BaseCode")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.Property<decimal?>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ItemCode")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.Property<string>("Remarks")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<bool>("Tconfirm")
                        .HasColumnType("bit")
                        .HasColumnName("TConfirm");

                    b.Property<string>("TconfirmBy")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .HasColumnName("TConfirmBy")
                        .IsFixedLength();

                    b.Property<string>("TconfirmCatCode")
                        .HasMaxLength(1)
                        .HasColumnType("nchar(1)")
                        .HasColumnName("TConfirmCatCode")
                        .IsFixedLength();

                    b.Property<DateTime?>("TconfirmOn")
                        .HasColumnType("datetime")
                        .HasColumnName("TConfirmOn");

                    b.Property<bool>("TconfirmReject")
                        .HasColumnType("bit")
                        .HasColumnName("TConfirmReject");

                    b.Property<string>("TconfirmSysCode")
                        .HasMaxLength(3)
                        .HasColumnType("nchar(3)")
                        .HasColumnName("TConfirmSysCode")
                        .IsFixedLength();

                    b.Property<bool>("Tforward")
                        .HasColumnType("bit")
                        .HasColumnName("TForward");

                    b.Property<string>("TforwardBy")
                        .HasMaxLength(25)
                        .HasColumnType("nchar(25)")
                        .HasColumnName("TForwardBy")
                        .IsFixedLength();

                    b.Property<string>("TforwardCatCode")
                        .HasMaxLength(1)
                        .HasColumnType("nchar(1)")
                        .HasColumnName("TForwardCatCode")
                        .IsFixedLength();

                    b.Property<DateTime?>("TforwardOn")
                        .HasColumnType("datetime")
                        .HasColumnName("TForwardOn");

                    b.Property<string>("TforwardSysCode")
                        .HasMaxLength(3)
                        .HasColumnType("nchar(3)")
                        .HasColumnName("TForwardSysCode")
                        .IsFixedLength();

                    b.Property<string>("Thead")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .HasColumnName("THead")
                        .IsFixedLength();

                    b.Property<int?>("TotalHours")
                        .HasColumnType("int");

                    b.Property<bool>("TpayHead")
                        .HasColumnType("bit")
                        .HasColumnName("TPayHead");

                    b.Property<string>("TpayHeadCatCode")
                        .HasMaxLength(1)
                        .HasColumnType("nchar(1)")
                        .HasColumnName("TPayHeadCatCode")
                        .IsFixedLength();

                    b.Property<DateTime?>("TpayHeadOn")
                        .HasColumnType("datetime")
                        .HasColumnName("TPayHeadOn");

                    b.Property<string>("TpayHeadSysCode")
                        .HasMaxLength(3)
                        .HasColumnType("nchar(3)")
                        .HasColumnName("TPayHeadSysCode")
                        .IsFixedLength();

                    b.Property<bool>("Treject")
                        .HasColumnType("bit")
                        .HasColumnName("TReject");

                    b.Property<string>("TrejectCatCode")
                        .HasMaxLength(1)
                        .HasColumnType("nchar(1)")
                        .HasColumnName("TRejectCatCode")
                        .IsFixedLength();

                    b.Property<DateTime?>("TrejectOn")
                        .HasColumnType("datetime")
                        .HasColumnName("TRejectOn");

                    b.Property<string>("TrejectReason")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("TRejectReason");

                    b.Property<string>("TrejectSysCode")
                        .HasMaxLength(3)
                        .HasColumnType("nchar(3)")
                        .HasColumnName("TRejectSysCode")
                        .IsFixedLength();

                    b.Property<string>("Trejectby")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .HasColumnName("TRejectby")
                        .IsFixedLength();

                    b.Property<bool>("Tsave")
                        .HasColumnType("bit")
                        .HasColumnName("TSave");

                    b.Property<string>("TsaveBy")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .HasColumnName("TSaveBy")
                        .IsFixedLength();

                    b.Property<string>("TsaveCatCode")
                        .HasMaxLength(1)
                        .HasColumnType("nchar(1)")
                        .HasColumnName("TSaveCatCode")
                        .IsFixedLength();

                    b.Property<DateTime?>("TsaveOn")
                        .HasColumnType("datetime")
                        .HasColumnName("TSaveOn");

                    b.Property<string>("TsaveSysCode")
                        .HasMaxLength(3)
                        .HasColumnType("nchar(3)")
                        .HasColumnName("TSaveSysCode")
                        .IsFixedLength();

                    b.Property<string>("TsubClark")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .HasColumnName("TSubClark")
                        .IsFixedLength();

                    b.Property<DateTime?>("TsubClarkOn")
                        .HasColumnType("datetime")
                        .HasColumnName("TSubClarkOn");

                    b.Property<string>("TsubClarkSysCode")
                        .HasMaxLength(3)
                        .HasColumnType("nchar(3)")
                        .HasColumnName("TSubClarkSysCode")
                        .IsFixedLength();

                    b.Property<string>("TsubClarlCatCode")
                        .HasMaxLength(1)
                        .HasColumnType("nchar(1)")
                        .HasColumnName("TSubClarlCatCode")
                        .IsFixedLength();

                    b.Property<bool>("Tsubject")
                        .HasColumnType("bit")
                        .HasColumnName("TSubject");

                    b.HasKey("TransId", "PayMonth", "BaseCode");

                    b.ToTable("Sub_ExtraDuty_Master", (string)null);
                });

            modelBuilder.Entity("FinaPay.Models.SubFinalPay327List", b =>
                {
                    b.Property<string>("TransId")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("PayMonth")
                        .HasColumnType("int");

                    b.Property<decimal?>("Amount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18,2)")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("ItemCat")
                        .HasMaxLength(1)
                        .HasColumnType("nchar(1)")
                        .IsFixedLength();

                    b.Property<string>("ItemCode")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.Property<int?>("_596")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("596")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("_598")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("598")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("_600")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("600")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("_605606")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("605/606")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("_605a606a")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("605A/606A")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("_610611")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("610/611")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("_612613")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("612/613")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("_615614")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("615/614")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("_619")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("619")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("_630")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("630")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("_686687")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("686/687")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("_688689")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("688/689")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("_690")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("690")
                        .HasDefaultValueSql("((0))");

                    b.HasKey("TransId", "OrderId", "PayMonth");

                    b.ToTable("Sub_Final_Pay_327_List", (string)null);
                });

            modelBuilder.Entity("FinaPay.Models.SubFinalPayDetail", b =>
                {
                    b.Property<int>("TransId")
                        .HasColumnType("int")
                        .HasColumnName("Trans_ID");

                    b.Property<int>("UnitId")
                        .HasColumnType("int")
                        .HasColumnName("Unit_ID");

                    b.Property<int>("Ulevel")
                        .HasColumnType("int")
                        .HasColumnName("ULevel");

                    b.Property<bool?>("AuthorizedOfficer")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("Reject")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("RejectAuth")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("RejectBy")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .IsFixedLength();

                    b.Property<string>("RejectReason")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<bool?>("RejectSec")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("Secreatry")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("SubjectClerk")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.HasKey("TransId", "UnitId", "Ulevel");

                    b.ToTable("Sub_Final_Pay_Details", (string)null);
                });

            modelBuilder.Entity("FinaPay.Models.SubFinalPayHeadDetail", b =>
                {
                    b.Property<int>("TransId")
                        .HasColumnType("int")
                        .HasColumnName("TransID");

                    b.Property<string>("SysCode")
                        .HasMaxLength(3)
                        .HasColumnType("nchar(3)")
                        .IsFixedLength();

                    b.Property<string>("CatCode")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .IsFixedLength();

                    b.Property<string>("OfficialNo")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.Property<int?>("AccountNo")
                        .HasColumnType("int");

                    b.Property<bool?>("ActionComplete")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("BankCode")
                        .HasColumnType("int");

                    b.Property<string>("BaseCode")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.Property<int?>("BranchCode")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ChequeDt")
                        .HasColumnType("date");

                    b.Property<string>("ChequeNo")
                        .HasMaxLength(20)
                        .HasColumnType("nchar(20)")
                        .IsFixedLength();

                    b.Property<DateTime?>("DischargeDt")
                        .HasColumnType("date");

                    b.Property<string>("NgReference")
                        .HasMaxLength(30)
                        .HasColumnType("nchar(30)")
                        .HasColumnName("NG_Reference")
                        .IsFixedLength();

                    b.Property<bool>("PForm")
                        .HasColumnType("bit")
                        .HasColumnName("P_Form");

                    b.Property<string>("PFormPath")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("P_Form_Path");

                    b.Property<DateTime?>("PaymentDt")
                        .HasColumnType("date");

                    b.Property<string>("Remarks")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Type")
                        .HasMaxLength(20)
                        .HasColumnType("nchar(20)")
                        .IsFixedLength();

                    b.Property<string>("VoucherDes")
                        .HasMaxLength(50)
                        .HasColumnType("nchar(50)")
                        .IsFixedLength();

                    b.Property<string>("VoucherNo")
                        .HasMaxLength(20)
                        .HasColumnType("nchar(20)")
                        .IsFixedLength();

                    b.HasKey("TransId", "SysCode", "CatCode", "OfficialNo");

                    b.ToTable("Sub_Final_Pay_Head_Details", (string)null);
                });

            modelBuilder.Entity("FinaPay.Models.SubFinalPayItem", b =>
                {
                    b.Property<string>("ItemCode")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.Property<int>("Unit")
                        .HasColumnType("int");

                    b.Property<decimal?>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool?>("DaysCal")
                        .HasColumnType("bit");

                    b.Property<string>("ItemCat")
                        .HasMaxLength(1)
                        .HasColumnType("nchar(1)")
                        .IsFixedLength();

                    b.Property<string>("ItemDescription")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("ItemCode", "Unit");

                    b.ToTable("Sub_Final_Pay_Items", (string)null);
                });

            modelBuilder.Entity("FinaPay.Models.SubFinalPayItemList", b =>
                {
                    b.Property<int>("TransId")
                        .HasColumnType("int")
                        .HasColumnName("Trans_ID");

                    b.Property<int>("UnitId")
                        .HasColumnType("int")
                        .HasColumnName("Unit_ID");

                    b.Property<string>("ItemCode")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.Property<decimal?>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Base")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.Property<bool?>("FromGratuity")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("Qty")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("TransId", "UnitId", "ItemCode");

                    b.ToTable("Sub_Final_Pay_Item_List", (string)null);
                });

            modelBuilder.Entity("FinaPay.Models.SubFinalPayLogDetail", b =>
                {
                    b.Property<int>("TransId")
                        .HasColumnType("int")
                        .HasColumnName("Trans_ID");

                    b.Property<int>("UnitId")
                        .HasColumnType("int")
                        .HasColumnName("Unit_ID");

                    b.Property<string>("UserId")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .HasColumnName("UserID")
                        .IsFixedLength();

                    b.Property<DateTime>("Logtime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Ip")
                        .HasMaxLength(20)
                        .HasColumnType("nchar(20)")
                        .HasColumnName("IP")
                        .IsFixedLength();

                    b.Property<string>("LogDetails")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.HasKey("TransId", "UnitId", "UserId", "Logtime")
                        .HasName("PK_Sub_FinalPay_Log_Details");

                    b.ToTable("Sub_Final_Pay_Log_Details", (string)null);
                });

            modelBuilder.Entity("FinaPay.Models.SubGradeDetail", b =>
                {
                    b.Property<string>("SysCode")
                        .HasMaxLength(3)
                        .HasColumnType("nchar(3)")
                        .IsFixedLength();

                    b.Property<string>("CatCode")
                        .HasMaxLength(1)
                        .HasColumnType("nchar(1)")
                        .IsFixedLength();

                    b.Property<string>("OfficialNo")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.Property<string>("Grade")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.Property<bool?>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("EffectDt")
                        .HasColumnType("date");

                    b.HasKey("SysCode", "CatCode", "OfficialNo", "Grade");

                    b.ToTable("Sub_Grade_Details", (string)null);
                });

            modelBuilder.Entity("FinaPay.Models.SubGradeRate", b =>
                {
                    b.Property<string>("Grade")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.Property<decimal?>("Rate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Type")
                        .HasMaxLength(1)
                        .HasColumnType("nchar(1)")
                        .IsFixedLength();

                    b.ToTable("Sub_Grade_Rates", (string)null);
                });

            modelBuilder.Entity("FinaPay.Models.SubHoliday", b =>
                {
                    b.Property<DateTime>("Holiday")
                        .HasColumnType("date");

                    b.HasKey("Holiday");

                    b.ToTable("Sub_Holidays", (string)null);
                });

            modelBuilder.Entity("FinaPay.Models.SubIncentiveForm", b =>
                {
                    b.Property<decimal>("Iid")
                        .HasColumnType("numeric(18,0)")
                        .HasColumnName("IID");

                    b.Property<string>("SysCode")
                        .HasMaxLength(3)
                        .HasColumnType("nchar(3)")
                        .IsFixedLength();

                    b.Property<string>("CatCode")
                        .HasMaxLength(1)
                        .HasColumnType("nchar(1)")
                        .IsFixedLength();

                    b.Property<string>("OfficialNo")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.Property<string>("ApplliedIncentive")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.Property<DateTime>("EffectDate")
                        .HasColumnType("date");

                    b.Property<bool>("ActionTaken")
                        .HasColumnType("bit");

                    b.Property<string>("BaseCode")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.Property<string>("CurrentIncentive")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DateofEnlistment")
                        .HasColumnType("date");

                    b.Property<string>("DcatCode")
                        .HasMaxLength(1)
                        .HasColumnType("nchar(1)")
                        .HasColumnName("DCatCode")
                        .IsFixedLength();

                    b.Property<string>("DofficialNo")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .HasColumnName("DOfficialNo")
                        .IsFixedLength();

                    b.Property<string>("DsysCode")
                        .HasMaxLength(3)
                        .HasColumnType("nchar(3)")
                        .HasColumnName("DSysCode")
                        .IsFixedLength();

                    b.Property<bool?>("Forward")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Forwardon")
                        .HasColumnType("datetime");

                    b.Property<string>("NavalService")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<bool>("PayAction")
                        .HasColumnType("bit");

                    b.Property<bool?>("Reject")
                        .HasColumnType("bit");

                    b.Property<string>("Remarks")
                        .HasMaxLength(100)
                        .HasColumnType("nchar(100)")
                        .IsFixedLength();

                    b.Property<DateTime?>("Saveon")
                        .HasColumnType("datetime");

                    b.Property<bool?>("ServiceBreak")
                        .HasColumnType("bit");

                    b.Property<long?>("TransId")
                        .HasColumnType("bigint")
                        .HasColumnName("TransID");

                    b.Property<bool?>("WarrantPunishment")
                        .HasColumnType("bit");

                    b.HasKey("Iid", "SysCode", "CatCode", "OfficialNo", "ApplliedIncentive", "EffectDate");

                    b.ToTable("Sub_Incentive_Forms", (string)null);
                });

            modelBuilder.Entity("FinaPay.Models.SubIncentiveFormsReceiver", b =>
                {
                    b.Property<decimal>("Iid")
                        .HasColumnType("numeric(18,0)")
                        .HasColumnName("IID");

                    b.Property<int>("Unit")
                        .HasColumnType("int");

                    b.Property<bool?>("Aaction")
                        .HasColumnType("bit")
                        .HasColumnName("AAction");

                    b.Property<string>("AcatCode")
                        .HasMaxLength(1)
                        .HasColumnType("nchar(1)")
                        .HasColumnName("ACatCode")
                        .IsFixedLength();

                    b.Property<string>("AofficialNo")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .HasColumnName("AOfficialNo")
                        .IsFixedLength();

                    b.Property<DateTime?>("Aon")
                        .HasColumnType("datetime")
                        .HasColumnName("AOn");

                    b.Property<string>("AsysCode")
                        .HasMaxLength(3)
                        .HasColumnType("nchar(3)")
                        .HasColumnName("ASysCode")
                        .IsFixedLength();

                    b.Property<string>("BaseCode")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.Property<int?>("Forder")
                        .HasColumnType("int")
                        .HasColumnName("FOrder");

                    b.Property<bool?>("Rejected")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("RejectedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Remarks")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("Saction")
                        .HasColumnType("bit")
                        .HasColumnName("SAction");

                    b.Property<string>("ScatCode")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("SCatCode")
                        .IsFixedLength();

                    b.Property<bool?>("SecAction")
                        .HasColumnType("bit");

                    b.Property<string>("SecCatCode")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .IsFixedLength();

                    b.Property<string>("SecOfficialNo")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.Property<DateTime?>("SecOn")
                        .HasColumnType("datetime");

                    b.Property<string>("SecSysCode")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("char(3)")
                        .IsFixedLength();

                    b.Property<string>("SofficialNo")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .HasColumnName("SOfficialNo")
                        .IsFixedLength();

                    b.Property<DateTime?>("Son")
                        .HasColumnType("datetime")
                        .HasColumnName("SOn");

                    b.Property<string>("SsysCode")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("char(3)")
                        .HasColumnName("SSysCode")
                        .IsFixedLength();

                    b.HasKey("Iid", "Unit");

                    b.ToTable("Sub_Incentive_Forms_Receivers", (string)null);
                });

            modelBuilder.Entity("FinaPay.Models.SubLog", b =>
                {
                    b.Property<string>("LuserId")
                        .HasMaxLength(50)
                        .HasColumnType("nchar(50)")
                        .HasColumnName("LUserId")
                        .IsFixedLength();

                    b.Property<string>("Ldescription")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("LDescription");

                    b.Property<DateTime>("LogOn")
                        .HasColumnType("datetime")
                        .HasColumnName("Log_on");

                    b.Property<string>("Ipaddress")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("IPaddress");

                    b.HasKey("LuserId", "Ldescription", "LogOn");

                    b.ToTable("Sub_Logs", (string)null);
                });

            modelBuilder.Entity("FinaPay.Models.SubMaternityTransDetail", b =>
                {
                    b.Property<string>("TransId")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.Property<string>("ItemCode")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.Property<string>("OfficialNo")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("BaseCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.Property<string>("CatCode")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nchar(1)")
                        .IsFixedLength();

                    b.Property<bool>("Edit")
                        .HasColumnType("bit");

                    b.Property<string>("EditedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nchar(50)")
                        .IsFixedLength();

                    b.Property<DateTime>("EffectDate")
                        .HasColumnType("date");

                    b.Property<string>("ItemCategory")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nchar(1)")
                        .IsFixedLength();

                    b.Property<bool>("Reject")
                        .HasColumnType("bit");

                    b.Property<string>("Remarks")
                        .HasMaxLength(150)
                        .HasColumnType("nchar(150)")
                        .IsFixedLength();

                    b.Property<string>("SysCode")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nchar(3)")
                        .IsFixedLength();

                    b.HasKey("TransId", "ItemCode", "OfficialNo");

                    b.ToTable("Sub_Maternity_Trans_Details", (string)null);
                });

            modelBuilder.Entity("FinaPay.Models.SubMaternityTransMaster", b =>
                {
                    b.Property<string>("TransId")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.Property<double>("PayMonth")
                        .HasColumnType("float");

                    b.Property<int>("UnitCode")
                        .HasColumnType("int");

                    b.Property<string>("BaseCode")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.Property<string>("LeaveType")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.Property<string>("CatCode")
                        .HasMaxLength(1)
                        .HasColumnType("nchar(1)")
                        .IsFixedLength();

                    b.Property<DateTime?>("FromDt")
                        .HasColumnType("date");

                    b.Property<int?>("Nofleaves")
                        .HasColumnType("int")
                        .HasColumnName("NOFLeaves");

                    b.Property<string>("OfficialNo")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.Property<string>("Path")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SysCode")
                        .HasMaxLength(3)
                        .HasColumnType("nchar(3)")
                        .IsFixedLength();

                    b.Property<bool>("Taudit")
                        .HasColumnType("bit")
                        .HasColumnName("TAudit");

                    b.Property<string>("TauditCatCode")
                        .HasMaxLength(1)
                        .HasColumnType("nchar(1)")
                        .HasColumnName("TAuditCatCode")
                        .IsFixedLength();

                    b.Property<string>("TauditOfficialNo")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .HasColumnName("TAuditOfficialNo")
                        .IsFixedLength();

                    b.Property<bool>("TauditStaff")
                        .HasColumnType("bit")
                        .HasColumnName("TAuditStaff");

                    b.Property<string>("TauditSysCode")
                        .HasMaxLength(3)
                        .HasColumnType("nchar(3)")
                        .HasColumnName("TAuditSysCode")
                        .IsFixedLength();

                    b.Property<DateTime?>("TauditedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("TAuditedOn");

                    b.Property<bool>("Tconfirm")
                        .HasColumnType("bit")
                        .HasColumnName("TConfirm");

                    b.Property<string>("TconfirmBy")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .HasColumnName("TConfirmBy")
                        .IsFixedLength();

                    b.Property<string>("TconfirmCatCode")
                        .HasMaxLength(1)
                        .HasColumnType("nchar(1)")
                        .HasColumnName("TConfirmCatCode")
                        .IsFixedLength();

                    b.Property<DateTime?>("TconfirmOn")
                        .HasColumnType("datetime")
                        .HasColumnName("TConfirmOn");

                    b.Property<string>("TconfirmSysCode")
                        .HasMaxLength(3)
                        .HasColumnType("nchar(3)")
                        .HasColumnName("TConfirmSysCode")
                        .IsFixedLength();

                    b.Property<bool>("Tforward")
                        .HasColumnType("bit")
                        .HasColumnName("TForward");

                    b.Property<string>("TforwardBy")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .HasColumnName("TForwardBy")
                        .IsFixedLength();

                    b.Property<string>("TforwardCatCode")
                        .HasMaxLength(1)
                        .HasColumnType("nchar(1)")
                        .HasColumnName("TForwardCatCode")
                        .IsFixedLength();

                    b.Property<DateTime?>("TforwardOn")
                        .HasColumnType("datetime")
                        .HasColumnName("TForwardOn");

                    b.Property<string>("TforwardSysCode")
                        .HasMaxLength(3)
                        .HasColumnType("nchar(3)")
                        .HasColumnName("TForwardSysCode")
                        .IsFixedLength();

                    b.Property<string>("TheadBy")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .HasColumnName("THeadBy")
                        .IsFixedLength();

                    b.Property<DateTime?>("ToDt")
                        .HasColumnType("date");

                    b.Property<bool>("TpayHead")
                        .HasColumnType("bit")
                        .HasColumnName("TPayHead");

                    b.Property<string>("TpayHeadCatCode")
                        .HasMaxLength(1)
                        .HasColumnType("nchar(1)")
                        .HasColumnName("TPayHeadCatCode")
                        .IsFixedLength();

                    b.Property<DateTime?>("TpayHeadOn")
                        .HasColumnType("datetime")
                        .HasColumnName("TPayHeadOn");

                    b.Property<string>("TpayHeadSysCode")
                        .HasMaxLength(3)
                        .HasColumnType("nchar(3)")
                        .HasColumnName("TPayHeadSysCode")
                        .IsFixedLength();

                    b.Property<bool>("Treject")
                        .HasColumnType("bit")
                        .HasColumnName("TReject");

                    b.Property<string>("TrejectCatCode")
                        .HasMaxLength(1)
                        .HasColumnType("nchar(1)")
                        .HasColumnName("TRejectCatCode")
                        .IsFixedLength();

                    b.Property<DateTime?>("TrejectOn")
                        .HasColumnType("datetime")
                        .HasColumnName("TRejectOn");

                    b.Property<string>("TrejectReason")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("TRejectReason");

                    b.Property<string>("TrejectSysCode")
                        .HasMaxLength(3)
                        .HasColumnType("nchar(3)")
                        .HasColumnName("TRejectSysCode")
                        .IsFixedLength();

                    b.Property<string>("Trejectby")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .HasColumnName("TRejectby")
                        .IsFixedLength();

                    b.Property<string>("TsauditCatCode")
                        .HasMaxLength(1)
                        .HasColumnType("nchar(1)")
                        .HasColumnName("TSAuditCatCode")
                        .IsFixedLength();

                    b.Property<string>("TsauditOfficialNo")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .HasColumnName("TSAuditOfficialNo")
                        .IsFixedLength();

                    b.Property<string>("TsauditSysCode")
                        .HasMaxLength(3)
                        .HasColumnType("nchar(3)")
                        .HasColumnName("TSAuditSysCode")
                        .IsFixedLength();

                    b.Property<DateTime?>("TsauditedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("TSAuditedOn");

                    b.Property<bool>("Tsave")
                        .HasColumnType("bit")
                        .HasColumnName("TSave");

                    b.Property<string>("TsaveBy")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .HasColumnName("TSaveBy")
                        .IsFixedLength();

                    b.Property<string>("TsaveCatCode")
                        .HasMaxLength(1)
                        .HasColumnType("nchar(1)")
                        .HasColumnName("TSaveCatCode")
                        .IsFixedLength();

                    b.Property<DateTime?>("TsaveOn")
                        .HasColumnType("datetime")
                        .HasColumnName("TSaveOn");

                    b.Property<string>("TsaveSysCode")
                        .HasMaxLength(3)
                        .HasColumnType("nchar(3)")
                        .HasColumnName("TSaveSysCode")
                        .IsFixedLength();

                    b.Property<bool>("Tsso")
                        .HasColumnType("bit")
                        .HasColumnName("TSSO");

                    b.Property<string>("Tssoby")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .HasColumnName("TSSOBy")
                        .IsFixedLength();

                    b.Property<string>("TssocatCode")
                        .HasMaxLength(1)
                        .HasColumnType("nchar(1)")
                        .HasColumnName("TSSOCatCode")
                        .IsFixedLength();

                    b.Property<DateTime?>("Tssoon")
                        .HasColumnType("datetime")
                        .HasColumnName("TSSOOn");

                    b.Property<string>("TssosysCode")
                        .HasMaxLength(3)
                        .HasColumnType("nchar(3)")
                        .HasColumnName("TSSOSysCode")
                        .IsFixedLength();

                    b.Property<string>("TsubClarkBy")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .HasColumnName("TSubClarkBy")
                        .IsFixedLength();

                    b.Property<string>("TsubClarkCatCode")
                        .HasMaxLength(1)
                        .HasColumnType("nchar(1)")
                        .HasColumnName("TSubClarkCatCode")
                        .IsFixedLength();

                    b.Property<DateTime?>("TsubClarkOn")
                        .HasColumnType("datetime")
                        .HasColumnName("TSubClarkOn");

                    b.Property<string>("TsubClarkSysCode")
                        .HasMaxLength(3)
                        .HasColumnType("nchar(3)")
                        .HasColumnName("TSubClarkSysCode")
                        .IsFixedLength();

                    b.Property<bool>("Tsubject")
                        .HasColumnType("bit")
                        .HasColumnName("TSubject");

                    b.HasKey("TransId", "PayMonth", "UnitCode", "BaseCode", "LeaveType");

                    b.ToTable("Sub_Maternity_Trans_Master", (string)null);
                });

            modelBuilder.Entity("FinaPay.Models.SubRole", b =>
                {
                    b.Property<string>("SysCode")
                        .HasMaxLength(3)
                        .HasColumnType("nchar(3)")
                        .IsFixedLength();

                    b.Property<string>("CatCode")
                        .HasMaxLength(1)
                        .HasColumnType("nchar(1)")
                        .IsFixedLength();

                    b.Property<string>("OfficialNo")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ActiveOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("SysCode", "CatCode", "OfficialNo");

                    b.ToTable("Sub_Role", (string)null);
                });

            modelBuilder.Entity("FinaPay.Models.SubRoleAllowance", b =>
                {
                    b.Property<string>("SysCode")
                        .HasMaxLength(3)
                        .HasColumnType("nchar(3)")
                        .IsFixedLength();

                    b.Property<string>("CatCode")
                        .HasMaxLength(1)
                        .HasColumnType("nchar(1)")
                        .IsFixedLength();

                    b.Property<string>("OfficialNo")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.Property<DateTime>("ActiveOn")
                        .HasColumnType("datetime");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("BaseCode")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.Property<DateTime?>("DeactiveOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Unit")
                        .HasColumnType("int");

                    b.HasKey("SysCode", "CatCode", "OfficialNo", "ActiveOn");

                    b.ToTable("Sub_Role_Allowances", (string)null);
                });

            modelBuilder.Entity("FinaPay.Models.SubSubItem", b =>
                {
                    b.Property<int>("SubjectId")
                        .HasColumnType("int")
                        .HasColumnName("SubjectID");

                    b.Property<string>("ItemCode")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.Property<string>("BaseCode")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.Property<string>("LogId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Log_Id");

                    b.HasKey("SubjectId", "ItemCode", "BaseCode");

                    b.ToTable("Sub_SubItems", (string)null);
                });

            modelBuilder.Entity("FinaPay.Models.SubSubject", b =>
                {
                    b.Property<int>("SubId")
                        .HasColumnType("int")
                        .HasColumnName("Sub_Id");

                    b.Property<string>("Subject")
                        .HasMaxLength(35)
                        .HasColumnType("nchar(35)")
                        .IsFixedLength();

                    b.HasKey("SubId");

                    b.ToTable("Sub_Subjects", (string)null);
                });

            modelBuilder.Entity("FinaPay.Models.SubTransaction", b =>
                {
                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("BaseCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.Property<string>("CatCode")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nchar(1)")
                        .IsFixedLength();

                    b.Property<string>("ItemCategory")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nchar(1)")
                        .IsFixedLength();

                    b.Property<string>("ItemCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.Property<string>("OfficialNo")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.Property<double>("PayMonth")
                        .HasColumnType("float");

                    b.Property<decimal?>("PrcoessAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool?>("Process")
                        .HasColumnType("bit");

                    b.Property<bool?>("ProcessAmtChanged")
                        .HasColumnType("bit");

                    b.Property<string>("Remarks")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int?>("SubjectId")
                        .HasColumnType("int");

                    b.Property<string>("SysCode")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nchar(3)")
                        .IsFixedLength();

                    b.Property<string>("TransId")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasIndex(new[] { "TransId" }, "NonClusteredIndex-20220106-152019");

                    b.ToTable("Sub_Transaction", (string)null);
                });

            modelBuilder.Entity("FinaPay.Models.SubTransactionFilePathD", b =>
                {
                    b.Property<string>("Path")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("TransId")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.ToTable("Sub_TransactionFile_Path_D", (string)null);
                });

            modelBuilder.Entity("FinaPay.Models.SubTransactionHistory", b =>
                {
                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("BaseCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.Property<string>("CatCode")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nchar(1)")
                        .IsFixedLength();

                    b.Property<string>("ItemCategory")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nchar(1)")
                        .IsFixedLength();

                    b.Property<string>("ItemCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.Property<string>("OfficialNo")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.Property<double>("PayMonth")
                        .HasColumnType("float");

                    b.Property<decimal?>("PrcoessAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool?>("Process")
                        .HasColumnType("bit");

                    b.Property<bool?>("ProcessAmtChanged")
                        .HasColumnType("bit");

                    b.Property<string>("Remarks")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int?>("SubjectId")
                        .HasColumnType("int");

                    b.Property<string>("SysCode")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nchar(3)")
                        .IsFixedLength();

                    b.Property<string>("TransId")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.ToTable("Sub_Transaction_History", (string)null);
                });

            modelBuilder.Entity("FinaPay.Models.SubTransDetail", b =>
                {
                    b.Property<string>("TransId")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.Property<double>("PayMonth")
                        .HasColumnType("float");

                    b.Property<int>("SubjectCode")
                        .HasColumnType("int");

                    b.Property<string>("BaseCode")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.Property<string>("Remarks")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("Tconfirm")
                        .HasColumnType("bit")
                        .HasColumnName("TConfirm");

                    b.Property<string>("TconfirmBy")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .HasColumnName("TConfirmBy")
                        .IsFixedLength();

                    b.Property<string>("TconfirmCatCode")
                        .HasMaxLength(1)
                        .HasColumnType("nchar(1)")
                        .HasColumnName("TConfirmCatCode")
                        .IsFixedLength();

                    b.Property<DateTime?>("TconfirmOn")
                        .HasColumnType("datetime")
                        .HasColumnName("TConfirmOn");

                    b.Property<string>("TconfirmSysCode")
                        .HasMaxLength(3)
                        .HasColumnType("nchar(3)")
                        .HasColumnName("TConfirmSysCode")
                        .IsFixedLength();

                    b.Property<bool>("Tforward")
                        .HasColumnType("bit")
                        .HasColumnName("TForward");

                    b.Property<string>("TforwardBy")
                        .HasMaxLength(25)
                        .HasColumnType("nchar(25)")
                        .HasColumnName("TForwardBy")
                        .IsFixedLength();

                    b.Property<string>("TforwardCatCode")
                        .HasMaxLength(1)
                        .HasColumnType("nchar(1)")
                        .HasColumnName("TForwardCatCode")
                        .IsFixedLength();

                    b.Property<DateTime?>("TforwardOn")
                        .HasColumnType("datetime")
                        .HasColumnName("TForwardOn");

                    b.Property<string>("TforwardSysCode")
                        .HasMaxLength(3)
                        .HasColumnType("nchar(3)")
                        .HasColumnName("TForwardSysCode")
                        .IsFixedLength();

                    b.Property<string>("Thead")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .HasColumnName("THead")
                        .IsFixedLength();

                    b.Property<bool>("TpayHead")
                        .HasColumnType("bit")
                        .HasColumnName("TPayHead");

                    b.Property<string>("TpayHeadCatCode")
                        .HasMaxLength(1)
                        .HasColumnType("nchar(1)")
                        .HasColumnName("TPayHeadCatCode")
                        .IsFixedLength();

                    b.Property<DateTime?>("TpayHeadOn")
                        .HasColumnType("datetime")
                        .HasColumnName("TPayHeadOn");

                    b.Property<string>("TpayHeadSysCode")
                        .HasMaxLength(3)
                        .HasColumnType("nchar(3)")
                        .HasColumnName("TPayHeadSysCode")
                        .IsFixedLength();

                    b.Property<bool>("Treject")
                        .HasColumnType("bit")
                        .HasColumnName("TReject");

                    b.Property<string>("TrejectCatCode")
                        .HasMaxLength(1)
                        .HasColumnType("nchar(1)")
                        .HasColumnName("TRejectCatCode")
                        .IsFixedLength();

                    b.Property<DateTime?>("TrejectOn")
                        .HasColumnType("datetime")
                        .HasColumnName("TRejectOn");

                    b.Property<string>("TrejectReason")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("TRejectReason");

                    b.Property<string>("TrejectSysCode")
                        .HasMaxLength(3)
                        .HasColumnType("nchar(3)")
                        .HasColumnName("TRejectSysCode")
                        .IsFixedLength();

                    b.Property<string>("Trejectby")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .HasColumnName("TRejectby")
                        .IsFixedLength();

                    b.Property<bool>("Tsave")
                        .HasColumnType("bit")
                        .HasColumnName("TSave");

                    b.Property<string>("TsaveBy")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .HasColumnName("TSaveBy")
                        .IsFixedLength();

                    b.Property<string>("TsaveCatCode")
                        .HasMaxLength(1)
                        .HasColumnType("nchar(1)")
                        .HasColumnName("TSaveCatCode")
                        .IsFixedLength();

                    b.Property<DateTime?>("TsaveOn")
                        .HasColumnType("datetime")
                        .HasColumnName("TSaveOn");

                    b.Property<string>("TsaveSysCode")
                        .HasMaxLength(3)
                        .HasColumnType("nchar(3)")
                        .HasColumnName("TSaveSysCode")
                        .IsFixedLength();

                    b.Property<string>("TsubClark")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .HasColumnName("TSubClark")
                        .IsFixedLength();

                    b.Property<DateTime?>("TsubClarkOn")
                        .HasColumnType("datetime")
                        .HasColumnName("TSubClarkOn");

                    b.Property<string>("TsubClarkSysCode")
                        .HasMaxLength(3)
                        .HasColumnType("nchar(3)")
                        .HasColumnName("TSubClarkSysCode")
                        .IsFixedLength();

                    b.Property<string>("TsubClarlCatCode")
                        .HasMaxLength(1)
                        .HasColumnType("nchar(1)")
                        .HasColumnName("TSubClarlCatCode")
                        .IsFixedLength();

                    b.Property<bool>("Tsubject")
                        .HasColumnType("bit")
                        .HasColumnName("TSubject");

                    b.HasKey("TransId", "PayMonth", "SubjectCode", "BaseCode");

                    b.ToTable("Sub_Trans_Details", (string)null);
                });

            modelBuilder.Entity("FinaPay.Models.SubTransId", b =>
                {
                    b.Property<int>("SubjectId")
                        .HasColumnType("int")
                        .HasColumnName("SubjectID");

                    b.Property<long?>("TransId")
                        .HasColumnType("bigint");

                    b.ToTable("Sub_TransId", (string)null);
                });

            modelBuilder.Entity("FinaPay.Models.SubUnitsD", b =>
                {
                    b.Property<string>("UnitCode")
                        .HasMaxLength(2)
                        .HasColumnType("nchar(2)")
                        .IsFixedLength();

                    b.Property<string>("UnitName")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.ToTable("Sub_Units_D", (string)null);
                });

            modelBuilder.Entity("FinaPay.Models.SubUnitsDetailsAllowance", b =>
                {
                    b.Property<string>("AllowanceCode")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.Property<string>("Unit")
                        .HasMaxLength(20)
                        .HasColumnType("nchar(20)")
                        .IsFixedLength();

                    b.ToTable("Sub_Units_Details_Allowances", (string)null);
                });

            modelBuilder.Entity("FinaPay.Models.SystemFreeze", b =>
                {
                    b.Property<string>("CatCode")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nchar(1)")
                        .IsFixedLength();

                    b.Property<bool>("Freeze")
                        .HasColumnType("bit");

                    b.Property<string>("OfficialNo")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.Property<string>("SysCode")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nchar(3)")
                        .IsFixedLength();

                    b.Property<DateTime>("UpdateOn")
                        .HasColumnType("datetime");

                    b.ToTable("SystemFreeze", (string)null);
                });

            modelBuilder.Entity("FinaPay.Models.TempAllowanceTran", b =>
                {
                    b.Property<decimal?>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("BaseCode")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.Property<string>("CatCode")
                        .HasMaxLength(1)
                        .HasColumnType("nchar(1)")
                        .IsFixedLength();

                    b.Property<string>("ItemCode")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.Property<string>("OfficialNo")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.Property<string>("SysCode")
                        .HasMaxLength(3)
                        .HasColumnType("nchar(3)")
                        .IsFixedLength();

                    b.ToTable("TempAllowanceTrans");
                });

            modelBuilder.Entity("FinaPay.Models.TempAllowanceTransaction", b =>
                {
                    b.Property<string>("CatCode")
                        .HasMaxLength(1)
                        .HasColumnType("nchar(1)")
                        .IsFixedLength();

                    b.Property<DateTime?>("EffectDt")
                        .HasColumnType("date");

                    b.Property<string>("OfficialNo")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.Property<string>("SysCode")
                        .HasMaxLength(3)
                        .HasColumnType("nchar(3)")
                        .IsFixedLength();

                    b.ToTable("TempAllowanceTransaction", (string)null);
                });

            modelBuilder.Entity("FinaPay.Models.TempTransaction", b =>
                {
                    b.Property<decimal?>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("BaseCode")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.Property<string>("CatCode")
                        .HasMaxLength(1)
                        .HasColumnType("nchar(1)")
                        .IsFixedLength();

                    b.Property<string>("ItemCode")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.Property<string>("OfficialNo")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.Property<string>("SysCode")
                        .HasMaxLength(3)
                        .HasColumnType("nchar(3)")
                        .IsFixedLength();

                    b.ToTable("TempTransaction", (string)null);
                });

            modelBuilder.Entity("FinaPay.Models.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("created_at");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("email");

                    b.Property<DateTime?>("EmailVerifiedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("email_verified_at");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("name");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("password");

                    b.Property<string>("RememberToken")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("remember_token");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Email" }, "users_email_unique")
                        .IsUnique();

                    b.ToTable("users", (string)null);
                });

            modelBuilder.Entity("FinaPay.Models.View1", b =>
                {
                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("BaseCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.Property<string>("CatCode")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nchar(1)")
                        .IsFixedLength();

                    b.Property<decimal>("Expr1")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ItemCategory")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nchar(1)")
                        .IsFixedLength();

                    b.Property<string>("ItemCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.Property<string>("OfficialNo")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.Property<double>("PayMonth")
                        .HasColumnType("float");

                    b.Property<decimal?>("PrcoessAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool?>("Process")
                        .HasColumnType("bit");

                    b.Property<bool?>("ProcessAmtChanged")
                        .HasColumnType("bit");

                    b.Property<string>("Remarks")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int?>("SubjectId")
                        .HasColumnType("int");

                    b.Property<string>("SysCode")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nchar(3)")
                        .IsFixedLength();

                    b.Property<bool>("TpayHead")
                        .HasColumnType("bit")
                        .HasColumnName("TPayHead");

                    b.Property<string>("TransId")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<bool>("Tsubject")
                        .HasColumnType("bit")
                        .HasColumnName("TSubject");

                    b.ToView("View_1");
                });

            modelBuilder.Entity("FinaPay.Models.Sub327List", b =>
                {
                    b.HasOne("FinaPay.Models.Sub327adjustmentTran", "Trans")
                        .WithMany("Sub327Lists")
                        .HasForeignKey("TransId")
                        .IsRequired()
                        .HasConstraintName("FK_Sub_327_List_Sub_327_List");

                    b.Navigation("Trans");
                });

            modelBuilder.Entity("FinaPay.Models.Sub327adjustmentTran", b =>
                {
                    b.Navigation("Sub327Lists");
                });
#pragma warning restore 612, 618
        }
    }
}
